# =============================================================================
# OpenTranscribe Backend - Development Dockerfile
# Optimized for development workflow with hot reload
# =============================================================================

FROM python:3.12.11-slim-bullseye

LABEL org.opencontainers.image.title="OpenTranscribe Backend (Development)" \
      org.opencontainers.image.description="Development environment for OpenTranscribe backend"

WORKDIR /app

# Install runtime dependencies + development tools
# Note: build-essential kept for installing new packages during development
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    libsndfile1 \
    libimage-exiftool-perl \
    libgomp1 \
    build-essential \
    gcc \
    g++ \
    procps \
    vim \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user (even in dev for consistency)
RUN groupadd -r appuser && \
    useradd -r -g appuser -u 1000 -m -s /bin/bash appuser && \
    mkdir -p /app /app/models /app/temp && \
    chown -R appuser:appuser /app

# Copy requirements file
COPY --chown=appuser:appuser requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Switch to non-root user
USER appuser

# Environment variables for development
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH=/home/appuser/.local/bin:$PATH

# Copy application code (will be mounted as volume in docker-compose)
COPY --chown=appuser:appuser . .

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:8080/health').read()" || exit 1

# Expose port
EXPOSE 8080

# Run application with hot reload for development (single worker for easier debugging)
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
