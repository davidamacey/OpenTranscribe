name: Build and Publish Docker Images

on:
  workflow_dispatch:  # Manual triggering ONLY - automatic builds disabled
  # Automatic builds disabled - run manually via GitHub Actions UI
  # push:
  #   branches:
  #     - master
  #   paths-ignore:
  #     - '**.md'
  #     - '.github/**'
  #     - '!.github/workflows/docker-publish.yml'

jobs:
  build_backend_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend AMD64
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: davidamacey/opentranscribe-backend:latest-amd64
          cache-from: type=registry,ref=davidamacey/opentranscribe-backend:buildcache-amd64
          cache-to: type=registry,ref=davidamacey/opentranscribe-backend:buildcache-amd64,mode=max

  build_backend_arm64:
    runs-on: ubuntu-latest
    if: false  # Disabled - build locally due to size (13.8GB) causing GitHub runner failures
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend ARM64
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          platforms: linux/arm64
          push: true
          tags: davidamacey/opentranscribe-backend:latest-arm64
          cache-from: type=registry,ref=davidamacey/opentranscribe-backend:buildcache-arm64
          cache-to: type=registry,ref=davidamacey/opentranscribe-backend:buildcache-arm64,mode=max

  build_frontend_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend AMD64
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: davidamacey/opentranscribe-frontend:latest-amd64
          cache-from: type=registry,ref=davidamacey/opentranscribe-frontend:buildcache-amd64
          cache-to: type=registry,ref=davidamacey/opentranscribe-frontend:buildcache-amd64,mode=max

  build_frontend_arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend ARM64
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          platforms: linux/arm64
          push: true
          tags: davidamacey/opentranscribe-frontend:latest-arm64
          cache-from: type=registry,ref=davidamacey/opentranscribe-frontend:buildcache-arm64
          cache-to: type=registry,ref=davidamacey/opentranscribe-frontend:buildcache-arm64,mode=max

  create_manifests:
    needs: [build_backend_amd64, build_frontend_amd64, build_frontend_arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push backend manifest (AMD64 only for now)
        run: |
          docker buildx imagetools create -t davidamacey/opentranscribe-backend:latest \
            davidamacey/opentranscribe-backend:latest-amd64

      - name: Create and push frontend manifest
        run: |
          docker buildx imagetools create -t davidamacey/opentranscribe-frontend:latest \
            davidamacey/opentranscribe-frontend:latest-amd64 \
            davidamacey/opentranscribe-frontend:latest-arm64
